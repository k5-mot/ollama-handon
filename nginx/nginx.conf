
events {
    worker_connections 1024;
}

http {

    server {
        listen 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
        }

        location /ollama/ {
            # Rewrite the incoming request by removing the prefix
            rewrite ^/ollama/(.*)$ /$1 break;

            # Proxy the modified request to the backend application
            proxy_pass http://192.168.11.13:11434/;

            # Optional: Set headers that might be required by the backend or for compliance with CORS, etc.
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle WebSocket upgrades if your application uses WebSockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /aichat/ {
            # Rewrite the incoming request by removing the prefix
            rewrite ^/aichat/(.*)$ /$1 break;

            # Proxy the modified request to the backend application
            proxy_pass http://192.168.11.13:8080/;

            # Optional: Set headers that might be required by the backend or for compliance with CORS, etc.
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle WebSocket upgrades if your application uses WebSockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

    }
}
